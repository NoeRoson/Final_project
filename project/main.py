# ---IMPORTAMOS LIBRERIAS NECESARIAS---

import os
import sys
current_dir = os.path.dirname(os.path.realpath(__file__))
src_dir = os.path.abspath(os.path.join(current_dir, '..', 'src'))
sys.path.append(src_dir)
import streamlit as st
import pandas as pd
from PIL import Image
import pylab as plt
import numpy as np
import altair as alt
import seaborn as sns
import plotly.express as px
import plotly.graph_objects as go


# ---IMAGENES---

espalda = Image.open('/Users/noeliarosonmartin/Ironhack/final_project_viodata/img/vio.jpeg')


# ---CONFIGURACION DE LA PAGINA---

st.set_page_config(
    page_title =' VioData',
    page_icon = 'üü£',
    layout = 'wide',
    initial_sidebar_state = 'expanded',)


# ---CUERPO DE LA P√ÅGINA PRINCIPAL---

st.header('VioData: Violencia de g√©nero en datos', divider='rainbow')

def home():

    col1, col2 = st.columns(2)

    # ---COLUMNA 1---

    with col1:
        st.markdown('<span style="color:#9777e8; font-size: 18px; font-weight: bold; ">#niunam√°s</span>', unsafe_allow_html=True)
        st.markdown('<span style="font-size: 24px;font-weight: bold; ">¬°Bienvenidas a VioData!</span>', unsafe_allow_html=True)
        st.markdown(
    f"""
    <div style='text-align: justify;'>
        <h6 style='font-size: 18px; color: #4757BB;'> Tu nueva plataforma para interactuar con todos los datos disponibles 
        sobre la violencia de g√©nero en Espa√±a üìä
        </h6>
        <h6 style='font-size: 16px;font-weight: normal; color: #4D458E;'> En este espacio, nos embarcamos en un viaje de conciencia 
        y acci√≥n contra la violencia de g√©nero, desde una perspectiva feminista. Reconocemos la urgencia de abordar esta tr√°gica realidad 
        que afecta a mujeres en todo el mundo y estamos comprometidas a ser agentes de cambio.
        </h6>
        <h6 style='font-size: 16px;font-weight: normal; color: #4D458E;'> Este espacio no solo es un dep√≥sito de informaci√≥n, sino tambi√©n una llamada a la acci√≥n. 
        Creemos en la importancia de la concienciaci√≥n como primer paso hacia un cambio real. Queremos empoderarte con el conocimiento necesario 
        para desafiar y transformar las normas sociales que perpet√∫an la violencia de g√©nero.
        </h6>
        <h6 style='font-size: 16px;font-weight: normal; color: #4D458E;'> A trav√©s del an√°lisis anal√≠tico y la difusi√≥n de recursos de prevenci√≥n, aspiramos a crear 
        una comunidad comprometida con la erradicaci√≥n de la violencia de g√©nero. Cada estad√≠stica contribuye a 
        nuestro objetivo colectivo de construir un mundo donde todas las personas, independientemente de su g√©nero, vivan libres de miedo y violencia.
        </h6>
        <h6 style='font-size: 16px;font-weight: normal; color: #4D458E;'> √önete a nosotras en este viaje. Juntas, estamos tejiendo una red de apoyo, solidaridad y resistencia 
        que desafiar√° y cambiar√° el status quo. La violencia de g√©nero no tiene cabida en nuestro futuro, y trabajaremos incansablemente hasta que sea una realidad para todas y todos.
        </h6>
        <h6 style='font-size: 20px; color: #4757BB;'>¬øNos acompa√±as?‚ôÄÔ∏é
        </h6>
    </div>
    """, 
    unsafe_allow_html=True)
   


    # ---COLUMNA 2---

    with col2:

        st.markdown(
    """
        <div style='background-color: #E9B1EC; padding: 10px; border-radius: 5px;text-align: center;'>
        <p style='color: #4D458E; font-weight: bold;'>ULTIMA ACTUALIZACI√ìN:</p>
        <p style='color: #4757BB; font-weight: bold;font-size: 20px'>¬øSab√≠as que van 1237 asesinatos de mujeres desde 2003 y 50 de menores desde 2013?</p>
        </div>
        """,
        unsafe_allow_html=True)
        st.text('   ')
        st.image(espalda, width = 500)
        
        st.text('   ')
       
        st.markdown(
        """
        <div style='background-color: #E9B1EC; padding: 5px; border-radius: 3px;text-align: center;'>
        <p style='color: #4757BB; font-weight: bold;'>S√öSCRIBETE AQU√ç PARA M√ÅS RECIBIR M√ÅS INFORMACI√ìN SOBRE VIOLENCIA DE G√âNERO</p>
        <button style='background-color: #9777e8; color: #E9D6F3; border: 2px solid #340252; padding: 5px; border-radius: 3px; font-weight: bold; '>¬°Pulsa!</button>
        </div>
        """,
        unsafe_allow_html=True)

    


# --- ESTRUCTURA INTERNA DEL CONTENIDO DEL MENU LATERAL---


# ---------MEN√ö LATERAL 1----------

# --- PAGINA 1. DENUNCIAS DE VIOLENCIA DE GENERO---

def denuncias():

    # ---INTRODUCCION---

    st.title('Denuncias por violencia de g√©nero')
    st.write('''
             En el siguiente gr√°fico podemos observar la evoluci√≥n de la tasa por mil mujeres
             desde el a√±o 2009 hasta el 2021, √∫ltimo a√±o de actualizaci√≥n de la poblaci√≥n total
             de mujeres por provincia. Destaca el caso de Cuenca que, junto a las provincias de 
             Alicante, Almer√≠a, Granada, Huelva o Melilla, entre otras, superan la tasa media de Espa√±a.
             ''')

    provincias = ['alava', 'albacete', 'alicante', 'almeria', 'asturias', 'avila', 'badajoz',
                              'barcelona', 'burgos', 'caceres', 'cadiz', 'cantabria', 'castellon', 'ciudad real',
                              'cordoba', 'cuenca', 'gerona', 'granada', 'guadalajara', 'guipuzcoa', 'huelva',
                              'huesca', 'islas baleares', 'jaen', 'coru√±a', 'rioja', 'las palmas', 'leon',
                              'lerida', 'lugo', 'madrid', 'malaga', 'melilla', 'murcia', 'navarra', 'orense',
                              'palencia', 'pontevedra', 'salamanca', 'santa cruz de tenerife', 'segovia', 'sevilla',
                              'soria', 'tarragona', 'teruel', 'toledo', 'valencia', 'valladolid', 'vizcaya',
                              'zamora', 'zaragoza']    
    

    # ---GR√ÅFICO 1.A. TASA DE DENUNCIAS POR CADA MIL MUJERES POR PROVINCIA---

    denu_combi = pd.read_csv('/Users/noeliarosonmartin/Ironhack/final_project_viodata/data_clean/portal_estadistico_vio_gen/denu_combi.csv')
    provincias = denu_combi['provincia'].unique()
    provincia_seleccionada = st.selectbox('Selecciona una provincia:', provincias)
    pro = denu_combi[denu_combi['provincia'] == provincia_seleccionada]
    media_total = denu_combi.groupby('a√±o')['tasa_por_1000'].mean().reset_index()

    st.text('   ')

    # Filtramos ya que no hay datos posteriores para el total de la poblaci√≥n
    pro = pro[pro['a√±o'] <= 2021]
    media_total = media_total[media_total['a√±o'] <= 2021]

    # Creamos el gr√°fico de barras para la provincia
    bars = alt.Chart(pro).mark_bar(color='lightsteelblue').encode(
        x='a√±o:O',
        y='tasa_por_1000:Q',
        tooltip=['tasa_por_1000:Q']).properties(width=1000, height=600)

    # L√≠nea para la media total de Espa√±a
    line = alt.Chart(media_total).mark_line(color='purple', strokeDash=[5, 5]).encode(
        x='a√±o:O',
        y='tasa_por_1000:Q')

    # Configuraci√≥n del dise√±o del gr√°fico
    chart = (bars + line).properties(
        title=f'Evoluci√≥n de la tasa de denuncias por violencia de g√©nero en {provincia_seleccionada.capitalize()} y media de Espa√±a:')

    st.altair_chart(chart)

    st.text('   ')

    st.divider()


    # ---GRAFICO 1.B. DENUNCIAS POR TRIMESTRE---

    st.write('''
             En el siguiente gr√°fico se visualizan las variaciones por trimestre que se dan en 
             las denuncias por violencia de g√©nero entre 2009 y 2022. Como podemos observar, estas han 
             seguido una tendencia similar a lo largo de los a√±os, si bien en el tercer trimestre
             se aprecia siempre una mayor cantidad de denuncias.
             ''')


    denu = pd.read_csv('/Users/noeliarosonmartin/Ironhack/final_project_viodata/data_clean/portal_estadistico_vio_gen/denuncias.csv')
    denu = denu[(denu['a√±o'] >= 2008) & (denu['a√±o'] <= 2022)]
    df_grouped = denu.groupby(['a√±o', 'trimestre']).agg({'total_denuncias': 'mean'}).reset_index()
    orden = ['primero', 'segundo', 'tercero', 'cuarto']
    # Creamos gr√°fico interactivo con Plotly Express
    fig = px.line(df_grouped, x='a√±o', y='total_denuncias', color='trimestre',
                labels={'total_denuncias': 'Media de Denuncias', 'trimestre': 'Trimestre'},
                title='Evoluci√≥n de las denuncias por violencia de g√©nero seg√∫n trimestre a lo largo de los a√±os',
                color_discrete_sequence=['#AED6F1', '#F5B7B1', '#A9DFBF', '#BB8FCE'],
                category_orders={'trimestre': orden},
                width=1000, height=600)

    # Dise√±o del gr√°fico
    fig.update_layout(xaxis_title='A√±o', yaxis_title='Media de Denuncias', legend_title='Trimestre',
                    legend=dict(orientation='h', y=-0.15)) # Ajustar la posici√≥n de la leyenda
                    
    st.plotly_chart(fig)




# --- PAGINA 2. LLAMADAS RECIBIDAS POR EL 016 ---

def llamadas():
    st.title('Llamadas recibidas por el 016')
    st.write('''
            El Ministerio de Igualdad, a trav√©s de la [Delegaci√≥n del Gobierno contra la Violencia de G√©nero](https://violenciagenero.igualdad.gob.es/home.htm), 
            ofrece un servicio integral para brindar [informaci√≥n](https://violenciagenero.igualdad.gob.es/informacionUtil/recursos/telefono016/home.htm), 
            asesoramiento jur√≠dico, y atenci√≥n psicosocial inmediata por personal especializado a todas las formas de violencia contra las mujeres,
            a trav√©s del n√∫mero telef√≥nico de marcaci√≥n abreviada [016](https://violenciagenero.igualdad.gob.es/informacionUtil/recursos/telefono016/home.htm); 
            por WhatsApp en el n√∫mero [600 000 016](https://wa.me/600000016); a trav√©s de un chat online en la p√°gina web de la Delegaci√≥n del Gobierno contra 
            la Violencia de G√©nero y por correo electr√≥nico al servicio 016 online: [016-online@igualdad.gob.es](mailto:016-online@igualdad.gob.es).
            En el siguiente gr√°fico puedes seleccionar la provincia sobre la que deseas ver la tasa de llamadas recibidas por el 016
            por cada mil mujeres que residen en dicha provincia y podr√°s compararla con la media nacional.
            ''')


# ---GR√ÅFICO 2.A. TASA DE LLAMADAS AL 016 POR CADA MIL MUJERES POR PROVINCIA---
    
    llam_combi = pd.read_csv('/Users/noeliarosonmartin/Ironhack/final_project_viodata/data_clean/portal_estadistico_vio_gen/llam_combi.csv')
    provincias = llam_combi['provincia'].unique()
    provincia_seleccionada = st.selectbox('Selecciona una provincia:', provincias)
    pro = llam_combi[llam_combi['provincia'] == provincia_seleccionada]
    media_total = llam_combi.groupby('a√±o')['tasa_por_1000'].mean().reset_index()

    st.text('   ')

    # Filtramos ya que no hay datos posteriores para el total de la poblaci√≥n
    pro = pro[pro['a√±o'] <= 2021]
    media_total = media_total[media_total['a√±o'] <= 2021]

    # Creamos el gr√°fico de barras para la provincia
    bars = alt.Chart(pro).mark_bar(color='#F5B7B1').encode(
        x='a√±o:O',
        y='tasa_por_1000:Q',
        tooltip=['tasa_por_1000:Q']).properties(width=1000, height=600)

    # L√≠nea para la media total de Espa√±a
    line = alt.Chart(media_total).mark_line(color='#16A085', strokeDash=[5, 5]).encode(
        x='a√±o:O',
        y='tasa_por_1000:Q')

    # Configuraci√≥n del dise√±o del gr√°fico
    chart = (bars + line).properties(
        title=f'Evoluci√≥n de la tasa de llamadas al 016 en {provincia_seleccionada.capitalize()} y media de Espa√±a:')

    st.altair_chart(chart)

    st.text('   ')

    st.divider()


    # ---GRAFICO 2.B. LLAMADAS AL 016 Y DENUNCIAS POR A√ëO ---


    st.write('''
             En el siguiente gr√°fico se visualiza la evoluci√≥n tanto de las llamadas como de
             las denuncias por violencia de g√©nero entre 2009 y 2022. Como podemos observar, podr√≠a existir cierta
             correlaci√≥n entre ambas variables, lo cual cobra sentido si pensamos que muchas de esas llamadas es posible que 
             hayan terminado en una denuncia real. Ambas variables se han ido incrementando con el paso del tiempo, lo que
             puede traducirse en una mayor concienciaci√≥n sobre la violencia de g√©nero y el aumento de la
             voluntad de las mujeres en solicitar apoyo ante tal situaci√≥n.
             ''')
    llam_denu = pd.read_csv('/Users/noeliarosonmartin/Ironhack/final_project_viodata/data_clean/portal_estadistico_vio_gen/llam_denu.csv')
    df_selected = llam_denu[['a√±o', 'total_llamadas', 'total_denuncias']]
    df_selected = df_selected[df_selected['a√±o'] <= 2022]

    # Agrupar por a√±o y calcular la suma de llamadas y denuncias
    df_grouped = df_selected.groupby('a√±o').mean().reset_index()

    # Crear gr√°fico interactivo con Plotly Express
    fig = px.line(df_grouped, x='a√±o', y=['total_llamadas', 'total_denuncias'],
                labels={'value': 'Media', 'variable': 'Tipo'},
                title='Evoluci√≥n de las denuncias por violencia de g√©nero y llamadas al 016 por a√±o',
                markers={'total_llamadas': 'circle', 'total_denuncias': 'x'},
                color_discrete_sequence=['#F1948A', 'cornflowerblue'])

    # Dise√±o del gr√°fico
    fig.update_layout(xaxis_title='A√±o', yaxis_title='Media', legend=dict(orientation='h'),
                      width=1000, height=600)

    # Mostrar gr√°fico en Streamlit
    st.plotly_chart(fig)


    st.text('   ')

    st.divider()


    # ---GRAFICO 2.C. LLAMADAS AL 016 SEG√öN PERSONA LLAMANTE ---

    llam = pd.read_csv('/Users/noeliarosonmartin/Ironhack/final_project_viodata/data_clean/portal_estadistico_vio_gen/llamadas016.csv')
    df_filtered = llam[llam['a√±o'] <= 2022]

    # Creamos el gr√°fico interactivo con Plotly Express
    fig = px.bar(df_filtered, x='a√±o', y='total_llamadas', color='llamante',
                labels={'total_llamadas': 'Total de Llamadas', 'a√±o': 'A√±o'},
                title='Llamadas al 016 seg√∫n la persona llamante',
                category_orders={'llamante': sorted(df_filtered['llamante'].unique())},  # Orden personalizado para la leyenda
                width=1000, height=600,
                color_discrete_sequence=['#7FB3D5', '#A2D9CE', '#C39BD3'])

    # Dise√±o del gr√°fico
    fig.update_layout(xaxis_title='A√±o', yaxis_title='Total de Llamadas', legend_title='Llamante',
                    legend=dict(orientation='h', y=-0.15))  # Ajustar la posici√≥n de la leyenda

    # Mostrar gr√°fico en Streamlit
    st.plotly_chart(fig)


# --- PAGINA 3. VICTIMAS DE VIOLENCIA DE GENERO---

def victimas():
    st.title('Mujeres asesinadas por violencia de g√©nero')
    st.write('''
    Aqu√≠ te mostramos datos relacionados con m√∫ltiples variables que ofrecen diferente
    informaci√≥n sobre las mujeres que han sido asesinadas por sus agresores durante
    estos a√±os.
    ''')

    # ---GRAFICO 3.A. VICTIMAS COMBINADO---
    
    # Cargar datos
    vic = pd.read_csv('/Users/noeliarosonmartin/Ironhack/final_project_viodata/data_clean/portal_estadistico_vio_gen/victimas_mortales.csv')

    # Crear una lista con las columnas que puedes usar como filtros
    filtros_disponibles = ['pareja', 'convivencia', 'suicidio', 'denuncia', 'edad_agresor',
                            'edad_victima', 'nacimiento_agresor', 'nacimiento_victima']

    # Diccionario de nombres de columnas personalizados
    filtros = {
        'pareja': '¬øEran pareja?',
        'convivencia': '¬øHab√≠a convivencia?',
        'suicidio': '¬øHubo suicidio por parte del agresor?',
        'denuncia': '¬øExist√≠a denuncia previa?',
        'edad_agresor': 'Rango de edad Agresor',
        'edad_victima': 'Rango de edad V√≠ctima',
        'nacimiento_agresor': 'Procedencia Agresor',
        'nacimiento_victima': 'Procedencia V√≠ctima'}
    
    # Crear una lista con las columnas que puedes usar como filtros
    filtros_disponibles = list(filtros.values())

    # Agregar un widget de selecci√≥n para que el usuario elija el filtro
    filtros_nuevos = st.selectbox('Selecciona un filtro:', filtros_disponibles)

    # Encontrar la clave correspondiente al valor seleccionado
    filtro_seleccionado = next(key for key, value in filtros.items() if value == filtros_nuevos)

    # Ordenar las edades de manera l√≥gica
    orden_edades = ['<16', '16-17', '18-20', '21-30', '31-40', '41-50', '51-60', '61-70', '71-84', '81-90', '>=85', 'desconocido']

    # Elegimos los colores:
    colores = ['#FEB4D2', '#F8A1C4', '#F580AB', '#F15C93', '#EB3A7B', '#E81863', '#DC0052', '#C50042', '#AC0032', '#920021', '#631333']
    fig = px.bar(vic, x='a√±o', y='total_victimas_mortales', color=filtro_seleccionado,
                labels={'total_victimas_mortales': 'Total de mujeres asesinadas'},
                title=f'Evoluci√≥n anual de mujeres asesinadas seg√∫n filtro seleccionado',
                width=1000, height=600, 
                category_orders={'edad_agresor': orden_edades, 'edad_victima': orden_edades},
                color_discrete_sequence=colores)

    # Dise√±o del gr√°fico
    fig.update_layout(xaxis_title='A√±o', yaxis_title='Total de mujeres asesinadas')

    # Mostrar gr√°fico en Streamlit
    st.plotly_chart(fig)

    st.text('   ')

    st.divider()


    #--GRAFICO 3.B. DISTRIBUCI√ìN V√çCTIMAS MORTALES POR TRIMESTRE Y PROVINCIA---

    # Filtrar por provincia
    provincia_seleccionada = st.selectbox('Selecciona una provincia:', vic['provincia'].unique())
    df_provincia = vic[vic['provincia'] == provincia_seleccionada]

    # Crear gr√°fico interactivo con Plotly Express
    fig = px.bar(df_provincia, x='a√±o', y='total_victimas_mortales', color='trimestre',
                labels={'total_victimas_mortales': 'V√≠ctimas Mortales', 'a√±o': 'A√±o'},
                title=f'Distribuci√≥n de V√≠ctimas Mortales por Trimestre y A√±o en {provincia_seleccionada.capitalize()}',
                barmode='stack',
                width=1000, height=600,
                color_discrete_sequence=['#AED6F1', '#F5B7B1', '#A9DFBF', '#BB8FCE'])

    # Dise√±o del gr√°fico
    fig.update_layout(xaxis_title='A√±o', yaxis_title='V√≠ctimas Mortales')

    # Mostrar gr√°fico en Streamlit
    st.plotly_chart(fig)

    st.text('   ')

    st.divider()


#------------------------------------------
    # --GRAFICO DE PRUEBA PARA NORMATIVAS--
    norm = pd.read_csv('/Users/noeliarosonmartin/Ironhack/final_project_viodata/data_clean/scrapeo/norm.csv')
    norm['normativas_presentes'] = norm['total_normativas'].apply(lambda x: 'S√≠' if x > 0 else 'No')


    # Creamos el gr√°fico interactivo con Plotly Express
    fig = px.histogram(norm, x='a√±o', color='normativas_presentes',
                    labels={'a√±o': 'A√±o', 'normativas_presentes': '¬øHubo normativa?'},
                    title='Presencia de Normativas por A√±o y Comunidad Aut√≥noma',
                    category_orders={'normativas_presentes': ['S√≠', 'No']},
                    width=1000, height=600,
                    color_discrete_sequence=['#AED6F1', '#F5B7B1'])

    # Dise√±o del gr√°fico
    fig.update_layout(xaxis_title='A√±o', yaxis_title='N√∫mero de Comunidades Aut√≥nomas',
                    legend_title='¬øHubo normativa ese a√±o?',
                    legend=dict(orientation='h', y=-0.15, x=0.5),  # Ajustamos la posici√≥n de la leyenda
                    barmode='group')  # Mostrar barras agrupadas


    st.plotly_chart(fig)
   

# ---PAGINA 4. MENORES---

def menores():
    st.title('Menores asesinados por violencia de g√©nero')
    st.write('Informaci√≥n sobre muertes de menores v√≠ctimas de violencia machista.')

# ---GRAFICO 4.A. MENORES:

    # Cargar datos
    men = pd.read_csv('/Users/noeliarosonmartin/Ironhack/final_project_viodata/data_clean/portal_estadistico_vio_gen/menores.csv')

    # Crear una lista con las columnas que puedes usar como filtros
    filtros_disponibles = ['padre_biologico', 'suicidio', 'edad']

    # Diccionario de nombres de columnas personalizados
    filtros = {
        'edad': 'Edad del menor',
        'suicidio': '¬øHubo suicidio por parte del agresor?',
        'provincia': 'Provincia'}
    
    # Crear una lista con las columnas que puedes usar como filtros
    filtros_disponibles = list(filtros.values())

    # Agregar un widget de selecci√≥n para que el usuario elija el filtro
    filtros_nuevos = st.selectbox('Selecciona un filtro:', filtros_disponibles)

    # Encontrar la clave correspondiente al valor seleccionado
    filtro_seleccionado = next(key for key, value in filtros.items() if value == filtros_nuevos)
    
    # Ordenar las edades de manera l√≥gica
    orden_edades = ['<1', '1-2', '3-4', '5-6', '7-8', '9-10', '11-12', '13-14', '15-17']

    # Elegimos los colores:
    color = ['#FFD1DC', '#FFC3D3', '#FFB5CA', '#FFA7C1', '#FF99B8', '#FF8BAF', '#FF7DA6', '#FF6F9D', '#FF6194',
             '#FF538B', '#FF4582', '#FF3779', '#FF296F', '#FF1B66', '#FF0D5D', '#F90053', '#EC0049', '#DF003F', '#D20035']


    fig = px.bar(men, x='a√±o', y='total_menores_vict_mortales', color=filtro_seleccionado,
                labels={'total_menores_vict_mortales': 'Total de menores asesinados'},
                title=f'Evoluci√≥n anual de menores asesinados seg√∫n filtro seleccionado',
                width=1000, height=600, 
                category_orders={'edad': orden_edades},
                color_discrete_sequence=color)

    # Dise√±o del gr√°fico
    fig.update_layout(xaxis_title='A√±o', yaxis_title='Total de menores asesinados')

    # Mostrar gr√°fico en Streamlit
    st.plotly_chart(fig)


# ---PAGINA 5. PROTECCION Y TIPOS DE DELITOS---

def prote_tipos():
    st.title('Protecci√≥n a las v√≠ctimas y tipolog√≠a de delitos')
    st.write('Informaci√≥n sobre √≥rdenes de protecci√≥n y tipos de delitos en materia de violencia de g√©nero.')


    # ---GRAFICO 5.A. ORDENES DE PROTECCION---
    ord = pd.read_csv('/Users/noeliarosonmartin/Ironhack/final_project_viodata/data_clean/portal_estadistico_vio_gen/ordenes_prot.csv')

    # Widget para seleccionar la provincia
    provincias = ord['provincia'].unique()
    provincia_seleccionada = st.selectbox('Selecciona una provincia:', provincias)

    # Filtrar datos seg√∫n la provincia seleccionada
    pro_ord = ord[ord['provincia'] == provincia_seleccionada]

    # Gr√°fico de √≥rdenes de protecci√≥n
    bars = alt.Chart(pro_ord).mark_bar(color='#A2D9CE').encode(
    x='a√±o:O',
    y='numero_ordenes_proteccion:Q',
    tooltip=['a√±o:N', alt.Tooltip('numero_ordenes_proteccion:Q', title='N√∫mero de √ìrdenes de Protecci√≥n')]
    ).properties(
        width=1000,
        height=600,
        title=f'Evoluci√≥n anual del n√∫mero de √≥rdenes de protecci√≥n en {provincia_seleccionada}'
    )
    
    st.altair_chart(bars, use_container_width=True)

    st.text('   ')
    st.divider()

    # ---GRAFICO 5.B.TIPOLOGIAS DELITOS---
    
    tipos = pd.read_csv('/Users/noeliarosonmartin/Ironhack/final_project_viodata/data_clean/ine/tipos_violencias.csv')
    tiposs = ['amenazas', 'delito', 'coacciones', 'da√±os', 'faltas', 'homicidio', 'lesiones', 'quebrantamiento_condena', 'tortura_integridad_moral']
    tipos = tipos[tipos['tipo'].isin(tiposs)]

    # Widget para seleccionar la comunidad
    comunidades = tipos['comunidad'].unique()
    comunidad_seleccionada = st.selectbox('Selecciona una comunidad:', comunidades)

    # Filtrar datos seg√∫n la comunidad seleccionada
    com = tipos[tipos['comunidad'] == comunidad_seleccionada]

    # Pivotar el DataFrame para tener los tipos como columnas
    com_pivot = com.pivot_table(index=['a√±o'], columns=['tipo'], values='total', fill_value=0).reset_index()

    # Convertir el DataFrame a formato largo para el gr√°fico
    com_pivot_long = com_pivot.melt(id_vars='a√±o', var_name='tipo', value_name='total')
    colores = ['#FDB4DB','#d5f5f3', '#69A8FA', '#8ED6E5', '#FA69A8', '#783367', '#CE93D8', '#FFCC80', '#B1DDBC']
    # Gr√°fico de barras
    bars = alt.Chart(com_pivot_long).mark_bar().encode(
        x='a√±o:O',
        y='total:Q',
        color=alt.Color('tipo:N', scale=alt.Scale(range=colores)),
        tooltip=['a√±o:N', 'tipo:N', 'total:Q']
    ).properties(width=1000, height=600)

    # Mostrar gr√°fico en Streamlit
    st.altair_chart(bars)
        


# ---PAGINA 6. COMBINACIONES---

def datos_combinados():
    st.title('Combinaci√≥n')
    st.write('Informaci√≥n sobre combinaciones.')
    

# --GRAFICOS COMBINADOS LLAMADAS, DENUNCIAS, VICTIMAS Y FESTIVOS--

    datos = pd.read_csv('/Users/noeliarosonmartin/Ironhack/final_project_viodata/data_clean/portal_estadistico_vio_gen/llam_denu_vic.csv')

    # Widget para seleccionar la provincia
    provincias = datos['provincia'].unique()
    provincia_seleccionada = st.selectbox('Selecciona una provincia:', provincias)
    datos_provincia = datos[datos['provincia'] == provincia_seleccionada]

    col1, col2 = st.columns(2)

    # ---COLUMNA 1---

    with col1:

        # Agrupamos los datos por trimestre
        datos_agrupados = datos_provincia.groupby('trimestre').agg({
            'total_denuncias': 'mean',
            'total_llamadas': 'mean',
            'total_victimas_mortales': 'mean'
        }).reset_index()

        # --GRAFICO 6.A. DENUNCIAS--

        fig_denuncias = px.line(datos_agrupados, x='trimestre', y='total_denuncias', labels={'total_denuncias': 'Total de Denuncias'},
                                title=f'Denuncias en {provincia_seleccionada.capitalize()} por trimestre')

        st.plotly_chart(fig_denuncias, use_container_width=True)

        # --GRAFICO 6.B. LLAMADAS 016--

        fig_llamadas = px.line(datos_agrupados, x='trimestre', y='total_llamadas', labels={'total_llamadas': 'Total de Llamadas'},
                            title=f'Llamadas al 016 en {provincia_seleccionada.capitalize()} por trimestre')

        st.plotly_chart(fig_llamadas, use_container_width=True)



    with col2:

        # --GRAFICO 6.C. LLAMADAS 016--

        fig_victimas = px.line(datos_agrupados, x='trimestre', y='total_victimas_mortales', labels={'total_victimas_mortales': 'Total de V√≠ctimas Mortales'},
                            title=f'V√≠ctimas Mortales en {provincia_seleccionada.capitalize()} por trimestre')
        st.plotly_chart(fig_victimas, use_container_width=True)

        
        # --GRAFICO 6.D. LLAMADAS 016--

        fest = pd.read_csv('/Users/noeliarosonmartin/Ironhack/final_project_viodata/data_clean/portal_estadistico_vio_gen/fest_melted.csv')
        # Agrupar los datos por trimestre
        group = fest.groupby('trimestre').agg({
        'total_festivos': 'sum'
        }).reset_index()
        fig_festivos = px.line(group, x='trimestre', y='total_festivos', labels={'total_festivos': 'Total de Festivos'},
                            title=f'Festivos en {provincia_seleccionada.capitalize()} por trimestre')
        
        # Configurar la l√≠nea para que sea horizontal
        fig_festivos.update_traces(line=dict(dash='solid'))

        st.plotly_chart(fig_festivos, use_container_width=True)





# ---------MEN√ö LATERAL 2----------

def recursos():
    st.title('Recursos en tu ciudad')
    st.write('Aqu√≠ puedes encontrar informaci√≥n sobre recursos de prevenci√≥n de la violencia de g√©nero')

def denun():
    st.title('¬øQu√© puedo hacer yo?')
    st.write('Aqu√≠ puedes encontrar informaci√≥n sobre qu√© hacer si conoces un caso de violencia de g√©nero')

def normas():
    st.title('¬øQu√© normativas rigen en mi Comunidad Aut√≥noma?')
    st.write('Aqu√≠ puedes encontrar informaci√≥n sobre las distintas normativas regionales en materia de violencia de g√©nero')
    norm = pd.read_csv('/Users/noeliarosonmartin/Ironhack/final_project_viodata/data_clean/scrapeo/norm.csv')
    norm['normativas_presentes'] = norm['total_normativas'].apply(lambda x: 'S√≠' if x > 0 else 'No')

    # Creamos el gr√°fico interactivo con Plotly Express
    fig = px.histogram(norm, x='a√±o', color='normativas_presentes',
                    labels={'a√±o': 'A√±o', 'normativas_presentes': 'Normativas Presentes'},
                    title='Presencia de Normativas por A√±o y Comunidad Aut√≥noma',
                    category_orders={'normativas_presentes': ['No', 'S√≠']},
                    width=800, height=500)

    # Dise√±o del gr√°fico
    fig.update_layout(xaxis_title='A√±o', yaxis_title='N√∫mero de Comunidades Aut√≥nomas',
                    legend_title='Normativas Presentes',
                    legend=dict(orientation='h', y=-0.15, x=0.5),  # Ajustar la posici√≥n de la leyenda
                    barmode='group')  # Mostrar barras agrupadas

    # Mostrar gr√°fico en Streamlit
    st.plotly_chart(fig)



def info():
    st.title('M√°s informaci√≥n sobre la violencia de g√©nero')
    st.write('Aqu√≠ puedes encontrar informaci√≥n adicional sobre violencia de g√©nero')




# ----ESTRUCTURA DEL MEN√ö LATERAL----


pages = {
    'P√°gina principal': home,
    'Denuncias por violencia de g√©nero': denuncias,
    'Llamadas al 016': llamadas,
    'Mujeres v√≠ctimas': victimas,
    'Menores v√≠ctimas': menores,
    'Protecci√≥n y tipolog√≠a de delitos': prote_tipos,
    'Combinaciones': datos_combinados}

rec = {
    'Recursos en tu ciudad': recursos,
    '¬øQu√© hacer ante la violencia de g√©nero?': denun,
    'Normativas en materia de violencia de g√©nero': normas,
    'M√°s informaci√≥n': info}

# T√≠tulo en el men√∫ lateral
st.sidebar.markdown('<span style="color: #511973; font-size: 24px; font-weight: bold;">VIODATA üü£</span>', unsafe_allow_html=True)

# Selecci√≥n del men√∫ principal
st.sidebar.markdown('<span style="color: #511973; font-size: 18px; font-weight: bold;">¬øQu√© quieres saber hoy?</span>', unsafe_allow_html=True)
selected_page_main = st.sidebar.selectbox('Elige una opci√≥n:', list(pages.keys()))

# L√≠nea divisoria
st.sidebar.markdown('<hr style="border-color: #511973;">', unsafe_allow_html=True)

# Selecci√≥n de la p√°gina de recursos
selected_page_rec = st.sidebar.radio('¬øQU√â PUEDES HACER CONTRA LA VIOLENCIA DE G√âNERO?', list(rec.keys()))

# Obtener la funci√≥n de la p√°gina seleccionada y ejecutarla
if selected_page_main in pages:
    pages[selected_page_main]()
elif selected_page_rec in rec:
    rec[selected_page_rec]()
